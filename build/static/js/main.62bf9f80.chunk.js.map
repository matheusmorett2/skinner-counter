{"version":3,"sources":["logo.svg","Stopwatch.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","formattedSeconds","sec","Math","floor","slice","Stopwatch","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","secondsElapsed","laps","lastClearedIncrementer","incrementer","_this2","setInterval","setState","clearInterval","reset","concat","react_default","a","createElement","className","onClick","handleStartClick","bind","handleStopClick","handleResetClick","map","lap","i","Component","defaultProps","App","andar","farejar","cocar","lamber","subir","start","showCsv","tempo","push","acao","_arrayFinal","_arrayFinal2","_arrayFinal3","_arrayFinal4","_arrayFinal5","arrayFinal","apply","toConsumableArray","_","groupBy","ar","value","Andar","ceil","replace","key","Minuto","Quantidade","length","Ação","Farejar","Cocar","Lamber","Subir","_this3","_this$state","react_csv","data","getCsv","asyncOnClick","baixou","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.62bf9f80.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, { Component } from 'react';\n\nconst formattedSeconds = (sec) =>\n    Math.floor(sec / 60) +\n    ':' +\n    ('0' + sec % 60).slice(-2)\n\n\nexport default class Stopwatch extends Component {\n    static defaultProps = {\n        reset: () => { }\n    }\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            secondsElapsed: 0,\n            laps: [],\n            lastClearedIncrementer: null\n        };\n        this.incrementer = null;\n    }\n\n    handleStartClick() {\n        this.incrementer = setInterval(() =>\n            this.setState({\n                secondsElapsed: this.state.secondsElapsed + 1\n            })\n            , 1000);\n    }\n\n    handleStopClick() {\n        clearInterval(this.incrementer);\n        this.setState({\n            lastClearedIncrementer: this.incrementer\n        });\n    }\n\n    handleResetClick() {\n        clearInterval(this.incrementer);\n        this.setState({\n            secondsElapsed: 0,\n            laps: []\n        });\n\n        this.props.reset()\n    }\n\n    handleLabClick() {\n        this.setState({\n            laps: this.state.laps.concat([this.state.secondsElapsed])\n        })\n    }\n\n    render() {\n        return (\n            <div className=\"stopwatch\">\n                <h1 className=\"stopwatch-timer\">{formattedSeconds(this.state.secondsElapsed)}</h1>\n\n                {(this.state.secondsElapsed === 0 ||\n                    this.incrementer === this.state.lastClearedIncrementer\n                    ? <button className=\"start-btn\" onClick={this.handleStartClick.bind(this)}>Start</button>\n                    : <button className=\"out\" onClick={this.handleStopClick.bind(this)}>Stop</button>\n                )}\n                <button className=\"out\" onClick={this.handleResetClick.bind(this)}>Reset</button>\n                <ul className=\"stopwatch-laps\">\n                    {this.state.laps.map((lap, i) =>\n                        <li className=\"stopwatch-lap\"><strong>{i + 1}</strong>/ {formattedSeconds(lap)}</li>)\n                    }\n                </ul>\n            </div>\n        );\n    }\n}","import React, { Component } from 'react';\nimport Stopwatch from './Stopwatch';\nimport { CSVLink, CSVDownload } from \"react-csv\";\nimport _ from 'lodash'\nimport logo from './logo.svg';\nimport './App.css';\n\nconst formattedSeconds = (sec) =>\n  Math.floor(sec / 60) +\n  ':' +\n  ('0' + sec % 60).slice(-2)\n\n\nclass App extends Component {\n\n\n\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      andar: [],\n      farejar: [],\n      cocar: [],\n      lamber: [],\n      subir: [],\n      start: false,\n      secondsElapsed: 0,\n      laps: [],\n      lastClearedIncrementer: null,\n      showCsv: false\n    }\n\n    this.incrementer = null;\n  }\n\n  handleStartClick() {\n    this.incrementer = setInterval(() =>\n      this.setState({\n        secondsElapsed: this.state.secondsElapsed + 1\n      })\n      , 1000);\n  }\n\n  handleStopClick() {\n    clearInterval(this.incrementer);\n    this.setState({\n      lastClearedIncrementer: this.incrementer\n    });\n  }\n\n  handleResetClick() {\n    clearInterval(this.incrementer);\n    this.setState({\n      secondsElapsed: 0,\n      laps: [],\n      andar: [],\n      farejar: [],\n      cocar: [],\n      lamber: [],\n      subir: [],\n      tempo: [],\n      start: false\n    });\n  }\n\n  handleLabClick() {\n    this.setState({\n      laps: this.state.laps.concat([this.state.secondsElapsed])\n    })\n  }\n\n  andar() {\n    const { andar } = this.state\n\n    andar.push({\n      acao: 'Andar',\n      tempo: formattedSeconds(this.state.secondsElapsed)\n    })\n\n    this.setState({\n      andar: andar\n    })\n  }\n\n  farejar() {\n    const { farejar } = this.state\n\n    farejar.push({\n      acao: 'Farejar',\n      tempo: formattedSeconds(this.state.secondsElapsed)\n    })\n\n    this.setState({\n      farejar: farejar\n    })\n  }\n\n  cocar() {\n    const { cocar } = this.state\n\n    cocar.push({\n      acao: 'Coçar',\n      tempo: formattedSeconds(this.state.secondsElapsed)\n    })\n\n    this.setState({\n      cocar: cocar\n    })\n  }\n\n  lamber() {\n    const { lamber } = this.state\n    lamber.push({\n      acao: 'Lamber',\n      tempo: formattedSeconds(this.state.secondsElapsed)\n    })\n\n    this.setState({\n      lamber: lamber\n    })\n  }\n\n  subir() {\n    const { subir } = this.state\n\n    subir.push({\n      acao: 'Subir',\n      tempo: formattedSeconds(this.state.secondsElapsed)\n    })\n\n    this.setState({\n      subir: subir\n    })\n  }\n\n  getCsv() {\n    let arrayFinal = []\n\n    arrayFinal.push(...this.state.andar)\n    arrayFinal.push(...this.state.farejar)\n    arrayFinal.push(...this.state.cocar)\n    arrayFinal.push(...this.state.lamber)\n    arrayFinal.push(...this.state.subir)\n\n\n    arrayFinal = _(arrayFinal)\n      .groupBy(ar => ar.acao)\n      .value();\n\n    arrayFinal.Andar = _(arrayFinal.Andar)\n      .groupBy(ar => Math.ceil(ar.tempo.replace(':', '.')))\n      .map((value, key) => ({ Minuto: key, Quantidade: value.length, Ação: 'Andar' }))\n      .value()\n\n    arrayFinal.Farejar = _(arrayFinal.Farejar)\n      .groupBy(ar => Math.ceil(ar.tempo.replace(':', '.')))\n      .map((value, key) => ({ Minuto: key, Quantidade: value.length, Ação: 'Farejar' }))\n      .value()\n\n\n    arrayFinal.Cocar = _(arrayFinal.Cocar)\n      .groupBy(ar => Math.ceil(ar.tempo.replace(':', '.')))\n      .map((value, key) => ({ Minuto: key, Quantidade: value.length, Ação: 'Coçar' }))\n      .value()\n\n    arrayFinal.Lamber = _(arrayFinal.Lamber)\n      .groupBy(ar => Math.ceil(ar.tempo.replace(':', '.')))\n      .map((value, key) => ({ Minuto: key, Quantidade: value.length, Ação: 'Lamber' }))\n      .value()\n\n    arrayFinal.Subir = _(arrayFinal.Subir)\n      .groupBy(ar => Math.ceil(ar.tempo.replace(':', '.')))\n      .map((value, key) => ({ Minuto: key, Quantidade: value.length, Ação: 'Subir' }))\n      .value()\n\n\n    arrayFinal = [\n      ...arrayFinal.Andar,\n      ...arrayFinal.Farejar,\n      ...arrayFinal.Cocar,\n      ...arrayFinal.Lamber,\n      ...arrayFinal.Subir\n    ]\n\n    return arrayFinal\n\n  }\n\n  render() {\n    const { andar, farejar, cocar, lamber, subir, tempo, start } = this.state\n\n    return (\n      <div className=\"App\">\n        <div className='head'>\n          Contato Skinner\n        </div>\n\n        <div className=\"stopwatch\">\n          <h1 className=\"stopwatch-timer\">{formattedSeconds(this.state.secondsElapsed)}</h1>\n\n          {(this.state.secondsElapsed === 0 ||\n            this.incrementer === this.state.lastClearedIncrementer\n            ? <button className=\"start-btn\" onClick={this.handleStartClick.bind(this)}>Start</button>\n            : <button className=\"out\" onClick={this.handleStopClick.bind(this)}>Stop</button>\n          )}\n          <button className=\"out\" onClick={this.handleResetClick.bind(this)}>Reset</button>\n          <ul className=\"stopwatch-laps\">\n            {this.state.laps.map((lap, i) =>\n              <li className=\"stopwatch-lap\"><strong>{i + 1}</strong>/ {formattedSeconds(lap)}</li>)\n            }\n          </ul>\n        </div>\n        <div>\n          <button onClick={() => this.andar()}>(A) Andar {andar.length}</button>\n          <button onClick={() => this.farejar()}>(S) Farejar {farejar.length}</button>\n          <button onClick={() => this.cocar()}>(D) Coçar {cocar.length}</button>\n          <button onClick={() => this.lamber()}>(F) Lamber {lamber.length}</button>\n          <button onClick={() => this.subir()}>(G) Subir {subir.length}</button>\n        </div>\n\n\n        <button className='low out' onClick={() => {\n          this.setState({\n            showCsv: true\n          })\n        }}>\n          Relatório\n        </button>\n        {(this.state.showCsv && <CSVLink\n          data={this.getCsv()}\n          asyncOnClick={true}\n          onClick={() => {\n            this.setState({\n              showCsv: false,\n              baixou: true\n            })\n          }}\n        >\n          <button className='low out'>\n            Agora clique aqui\n        </button>\n        </CSVLink>)}\n        {(this.state.baixou && <p>\n          Fico feliz que tenha baixado, zap: 41 9 9169-8884\n        </p>)}\n\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}